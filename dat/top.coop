do (
import m1;
from rm import m2;
defun
  var (a b c)
  ivar (d e f) do (
  set x y;
  while true do (
    set u v;
  );
  while do (
    set v 300;
  ) until done;
);
defun f (a b)
  var (c d e) do (
  set w z;
  try do (
    set z 600;
  )
  except e do (
    set z 601;
  )
  else do (
    set z 602;
  )
  end do (
    set z 603;
  );
);
defun g (x)
  var (i j k) do (
  if flag do (
    set q r;
    set s 100;
  )
  else (not eof) do (
    set t 75;
  )
  else do (
    set u 400;
  );
);
abdef h (y z) do (;);
class C 
  var (c d e)
  ivar (f g) do (
  defun c1 (x y z)
    var (u v w) do (
    set t 200;
  );
  idefun c2 ()
    var (r s t) do (
    set r s;
    set a b;
  );
);
iclass D E
  var (h)
  ivar (k l m) do (
  defun d1 (x y)
    var (a b c) do (
    set a b;
    set b c
  );
  idefun d2 (z) do (
    set z 0;
  );
);
enum e a b c;
ienum f x y;
)

